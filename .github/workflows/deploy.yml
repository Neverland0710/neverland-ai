name: Deploy Neverland AI to EC2

on:
  push:
    branches: [ "main" ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: SSH & Deploy to EC2
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_KEY }}
          port: 22
          timeout: 30s
          command_timeout: 15m
          script: |
            echo "📁 프로젝트 디렉토리 설정"
            
            # 안전한 디렉토리 처리
            if [ -d "~/neverland-ai" ]; then
              echo "기존 디렉토리로 이동 및 업데이트"
              cd ~/neverland-ai
              git pull origin main
            else
              echo "새 프로젝트 클론"
              git clone https://github.com/Neverland0710/neverland-ai.git ~/neverland-ai
              cd ~/neverland-ai
            fi

            echo "🔐 .env 파일 생성"
            echo "OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}" > .env
            echo "QDRANT_URL=${{ secrets.QDRANT_URL }}" >> .env
            echo "QDRANT_API_KEY=${{ secrets.QDRANT_API_KEY }}" >> .env
            echo "DAILY_COLLECTION=${{ secrets.DAILY_COLLECTION }}" >> .env
            echo "LETTER_COLLECTION=${{ secrets.LETTER_COLLECTION }}" >> .env
            echo "OBJECT_COLLECTION=${{ secrets.OBJECT_COLLECTION }}" >> .env
            echo "MYSQL_HOST=${{ secrets.MYSQL_HOST }}" >> .env
            echo "MYSQL_PORT=${{ secrets.MYSQL_PORT }}" >> .env
            echo "MYSQL_USER=${{ secrets.MYSQL_USER }}" >> .env
            echo "MYSQL_PASSWORD=${{ secrets.MYSQL_PASSWORD }}" >> .env
            echo "MYSQL_DATABASE=${{ secrets.MYSQL_DATABASE }}" >> .env
            echo "ELEVENLABS_API_KEY=${{ secrets.ELEVENLABS_API_KEY }}" >> .env
            echo "LANGSMITH_API_KEY=${{ secrets.LANGSMITH_API_KEY }}" >> .env
            echo "LANGSMITH_ENDPOINT=${{ secrets.LANGSMITH_ENDPOINT }}" >> .env
            echo "LANGSMITH_PROJECT=${{ secrets.LANGSMITH_PROJECT }}" >> .env

            echo "🧹 기존 컨테이너 정리"
            docker stop neverland-ai || true
            docker rm neverland-ai || true

            echo "🛠️ 최신 이미지 빌드"
            docker build -t neverland-ai .
            
            echo "🚀 컨테이너 실행"
            docker run -d \
              -p 8000:8000 \
              --env-file .env \
              --restart always \
              --name neverland-ai \
              neverland-ai

            echo "🚀 배포 완료"