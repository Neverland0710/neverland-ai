name: Deploy Neverland AI to EC2

on:
  push:
    branches: [ "main" ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout source
      uses: actions/checkout@v4
      
    - name: Create .env file from secrets
      run: |
        echo "OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}" >> .env
        echo "QDRANT_URL=${{ secrets.QDRANT_URL }}" >> .env
        echo "QDRANT_API_KEY=${{ secrets.QDRANT_API_KEY }}" >> .env
        echo "DAILY_COLLECTION=${{ secrets.DAILY_COLLECTION }}" >> .env
        echo "LETTER_COLLECTION=${{ secrets.LETTER_COLLECTION }}" >> .env
        echo "OBJECT_COLLECTION=${{ secrets.OBJECT_COLLECTION }}" >> .env
        echo "MYSQL_HOST=${{ secrets.MYSQL_HOST }}" >> .env
        echo "MYSQL_PORT=${{ secrets.MYSQL_PORT }}" >> .env
        echo "MYSQL_USER=${{ secrets.MYSQL_USER }}" >> .env
        echo "MYSQL_PASSWORD=${{ secrets.MYSQL_PASSWORD }}" >> .env
        echo "MYSQL_DATABASE=${{ secrets.MYSQL_DATABASE }}" >> .env
        echo "ELEVENLABS_API_KEY=${{ secrets.ELEVENLABS_API_KEY }}" >> .env
        echo "LANGSMITH_API_KEY=${{ secrets.LANGSMITH_API_KEY }}" >> .env
        echo "LANGSMITH_ENDPOINT=${{ secrets.LANGSMITH_ENDPOINT }}" >> .env
        echo "LANGSMITH_PROJECT=${{ secrets.LANGSMITH_PROJECT }}" >> .env
        
    - name: Build Docker image
      run: docker build -t neverland-ai .
      
    - name: SSH to EC2 and deploy
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ubuntu
        key: ${{ secrets.EC2_KEY }}
        port: 22
        script: |
          echo " 프로젝트 디렉토리 이동/복제"
          cd ~/neverland-ai || git clone https://github.com/Neverland0710/neverland-ai.git ~/neverland-ai
          cd ~/neverland-ai
          git pull origin main
          
          echo " .env 파일 구성"
          echo "OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}" > .env
          echo "QDRANT_URL=${{ secrets.QDRANT_URL }}" >> .env
          echo "QDRANT_API_KEY=${{ secrets.QDRANT_API_KEY }}" >> .env
          echo "DAILY_COLLECTION=${{ secrets.DAILY_COLLECTION }}" >> .env
          echo "LETTER_COLLECTION=${{ secrets.LETTER_COLLECTION }}" >> .env
          echo "OBJECT_COLLECTION=${{ secrets.OBJECT_COLLECTION }}" >> .env
          echo "MYSQL_HOST=${{ secrets.MYSQL_HOST }}" >> .env
          echo "MYSQL_PORT=${{ secrets.MYSQL_PORT }}" >> .env
          echo "MYSQL_USER=${{ secrets.MYSQL_USER }}" >> .env
          echo "MYSQL_PASSWORD=${{ secrets.MYSQL_PASSWORD }}" >> .env
          echo "MYSQL_DATABASE=${{ secrets.MYSQL_DATABASE }}" >> .env
          echo "ELEVENLABS_API_KEY=${{ secrets.ELEVENLABS_API_KEY }}" >> .env
          echo "LANGSMITH_API_KEY=${{ secrets.LANGSMITH_API_KEY }}" >> .env
          echo "LANGSMITH_ENDPOINT=${{ secrets.LANGSMITH_ENDPOINT }}" >> .env
          echo "LANGSMITH_PROJECT=${{ secrets.LANGSMITH_PROJECT }}" >> .env
          
          echo " 기존 컨테이너 강제 종료 및 삭제"
          docker rm -f neverland-ai || echo "neverland-ai 컨테이너가 없거나 이미 종료됨"
          
          echo " 새 이미지 빌드"
          docker build -t neverland-ai .
          
          echo " 새 neverland-ai 컨테이너 실행"
          docker run -d \
            -p 8000:8000 \
            --env-file .env \
            --restart always \
            --name neverland-ai \
            neverland-ai
          
          echo " 배포 완료!"
          docker ps | grep neverland-ai